env:
    PUBLIC_VERSION_NUMBER: '0.5'
    PORTABLE_DIR: ${{ github.workspace }}/output/installer
    INSTALLBUILDER_DIR: ib/app
    INSTALLBUILDER_URL: https://installbuilder.com/installbuilder-professional-22.10.0-windows-installer.exe

name: Build  'pilot-november-2022 with Installer'
on: [workflow_dispatch]  
jobs:
  build:
    runs-on: windows-2019
    steps:   
      - name: Install the InstalBuilder
        shell: bash
        env:
         IB_LICENSE: ${{ secrets.INSTALLER_LICENSE }}
        run: |
            curl -L ${{ env.INSTALLBUILDER_URL }} --output ib.exe
            ./ib.exe --mode unattended --prefix ${{ env.INSTALLBUILDER_DIR }}
            ${{ env.INSTALLBUILDER_DIR }}/bin/builder-cli.exe --version
            echo "$IB_LICENSE" > lic.xml
            echo "INSTALLER_SRC_PREFIX=$(pwd)" >> $GITHUB_ENV
            echo "INSTALLER_BIN_PREFIX=$ABSOLUTE_PORTABLE_DIR" >> $GITHUB_ENV            
      - uses: actions/checkout@v3
        with:
           path: maco_content_2023_packages
      - name: Checkout runtimes
        uses: actions/checkout@v3
        with:
          repository: kroehne/maco_content_2023_runtimes    
          token: ${{ secrets.MACO_CONTENT_CHECKOUT}}  
          path: maco_content_2023_runtimes
      - name: Checkout content in branch 'pilot-november-2022'
        uses: actions/checkout@v3
        with:
          repository: kroehne/maco_content_2023    
          token: ${{ secrets.MACO_CONTENT_CHECKOUT}}  
          path: maco_content_2023
          ref: pilot-november-2022
      - name: Prepare folders
        shell: bash
        run: |      
         mkdir -p maco_content_2023/items/cover
         cp maco_content_2023/cover/*.zip maco_content_2023/items/cover   
         mkdir -p maco_content_2023/runtimes
         cp -r maco_content_2023_runtimes/9.8.0 maco_content_2023/runtimes
         mkdir -p output/ 
         cp -r maco_content_2023/materials output/
         mkdir docs
         mkdir software-driven
         ls -R
      - name: Checkout Alea / Testapp 
        shell: bash
        run: |
          git clone --branch develop https://ukroehne:${{ secrets.CHECKINKEYMACO }}@bitbucket.org/software-driven/dipf-alea.git software-driven/dipf-alea
          git clone --branch develop https://ukroehne:${{ secrets.CHECKINKEYMACO }}@bitbucket.org/software-driven/dipf-testapp.git software-driven/dipf-testapp
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
          dotnet-quality: 'preview'     
      - name: Build output
        shell: bash
        run: |
          cd software-driven
          cd dipf-alea
          cd Alea.Prepare
          dotnet run --project ./Alea.Prepare.csproj -- -w false -c ../../../maco_content_2023/codebooks/ -d ../../../output/ -i  ../../../maco_content_2023/items/ -r ../../../maco_content_2023/runtimes/ -s ../../../output/ > "../../../output/alea_preopare_log.txt"
          cd ..
          cd ..
          cd ..        
      - name: Overwrite content to create installer 
        shell: bash
        run: | 
         rsync -avh output/ ./software-driven/dipf-alea/Installer/Content/ --delete --exclude=/.git             
      - name: Create installer package
        shell: bash
        run: |                     
            ${{ env.INSTALLBUILDER_DIR }}/bin/builder-cli.exe build ./software-driven/dipf-alea/Installer/AleaDesktop-Pilot.xml windows-x64 \
                --license lic.xml \
                --setvars project.outputDirectory=$(pwd) \
                --setvars project.version=$PUBLIC_VERSION_NUMBER \
                --setvars project.fullName="AleaDesktop (MSK-OC) -- Pilot November 2022" \
                --setvars vendor="DIPF / erstellt durch Software Driven UG" 
      - name: Upload package artifact
        uses: actions/upload-artifact@v1
        with:
          name: AleaDesktopMskOC-${{ env.PUBLIC_VERSION_NUMBER }}-windows-x64-installer.exe 
          path: output/installer/AleaDesktopMskOC-${{ env.PUBLIC_VERSION_NUMBER }}-windows-x64-installer.exe 
                
    